// Code generated by ent, DO NOT EDIT.

package ent

import (
	"go-ent-project/ent/camera"
	"go-ent-project/ent/car"
	"go-ent-project/ent/permission"
	"go-ent-project/ent/policestation"
	"go-ent-project/ent/role"
	"go-ent-project/ent/schema"
	"go-ent-project/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	cameraFields := schema.Camera{}.Fields()
	_ = cameraFields
	// cameraDescName is the schema descriptor for name field.
	cameraDescName := cameraFields[0].Descriptor()
	// camera.NameValidator is a validator for the "name" field. It is called by the builders before save.
	camera.NameValidator = cameraDescName.Validators[0].(func(string) error)
	// cameraDescModel is the schema descriptor for model field.
	cameraDescModel := cameraFields[1].Descriptor()
	// camera.ModelValidator is a validator for the "model" field. It is called by the builders before save.
	camera.ModelValidator = cameraDescModel.Validators[0].(func(string) error)
	// cameraDescImei is the schema descriptor for imei field.
	cameraDescImei := cameraFields[2].Descriptor()
	// camera.ImeiValidator is a validator for the "imei" field. It is called by the builders before save.
	camera.ImeiValidator = cameraDescImei.Validators[0].(func(string) error)
	// cameraDescActive is the schema descriptor for active field.
	cameraDescActive := cameraFields[4].Descriptor()
	// camera.DefaultActive holds the default value on creation for the active field.
	camera.DefaultActive = cameraDescActive.Default.(bool)
	carFields := schema.Car{}.Fields()
	_ = carFields
	// carDescMake is the schema descriptor for make field.
	carDescMake := carFields[0].Descriptor()
	// car.MakeValidator is a validator for the "make" field. It is called by the builders before save.
	car.MakeValidator = carDescMake.Validators[0].(func(string) error)
	// carDescModel is the schema descriptor for model field.
	carDescModel := carFields[1].Descriptor()
	// car.ModelValidator is a validator for the "model" field. It is called by the builders before save.
	car.ModelValidator = carDescModel.Validators[0].(func(string) error)
	// carDescYear is the schema descriptor for year field.
	carDescYear := carFields[2].Descriptor()
	// car.YearValidator is a validator for the "year" field. It is called by the builders before save.
	car.YearValidator = carDescYear.Validators[0].(func(int) error)
	// carDescRegistration is the schema descriptor for registration field.
	carDescRegistration := carFields[3].Descriptor()
	// car.RegistrationValidator is a validator for the "registration" field. It is called by the builders before save.
	car.RegistrationValidator = carDescRegistration.Validators[0].(func(string) error)
	// carDescColor is the schema descriptor for color field.
	carDescColor := carFields[4].Descriptor()
	// car.ColorValidator is a validator for the "color" field. It is called by the builders before save.
	car.ColorValidator = carDescColor.Validators[0].(func(string) error)
	permissionFields := schema.Permission{}.Fields()
	_ = permissionFields
	// permissionDescName is the schema descriptor for name field.
	permissionDescName := permissionFields[0].Descriptor()
	// permission.NameValidator is a validator for the "name" field. It is called by the builders before save.
	permission.NameValidator = permissionDescName.Validators[0].(func(string) error)
	// permissionDescCanRead is the schema descriptor for can_read field.
	permissionDescCanRead := permissionFields[1].Descriptor()
	// permission.DefaultCanRead holds the default value on creation for the can_read field.
	permission.DefaultCanRead = permissionDescCanRead.Default.(bool)
	// permissionDescCanCreate is the schema descriptor for can_create field.
	permissionDescCanCreate := permissionFields[2].Descriptor()
	// permission.DefaultCanCreate holds the default value on creation for the can_create field.
	permission.DefaultCanCreate = permissionDescCanCreate.Default.(bool)
	// permissionDescCanUpdate is the schema descriptor for can_update field.
	permissionDescCanUpdate := permissionFields[3].Descriptor()
	// permission.DefaultCanUpdate holds the default value on creation for the can_update field.
	permission.DefaultCanUpdate = permissionDescCanUpdate.Default.(bool)
	// permissionDescCanDelete is the schema descriptor for can_delete field.
	permissionDescCanDelete := permissionFields[4].Descriptor()
	// permission.DefaultCanDelete holds the default value on creation for the can_delete field.
	permission.DefaultCanDelete = permissionDescCanDelete.Default.(bool)
	policestationFields := schema.PoliceStation{}.Fields()
	_ = policestationFields
	// policestationDescName is the schema descriptor for name field.
	policestationDescName := policestationFields[0].Descriptor()
	// policestation.NameValidator is a validator for the "name" field. It is called by the builders before save.
	policestation.NameValidator = policestationDescName.Validators[0].(func(string) error)
	// policestationDescCode is the schema descriptor for code field.
	policestationDescCode := policestationFields[2].Descriptor()
	// policestation.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	policestation.CodeValidator = policestationDescCode.Validators[0].(func(string) error)
	// policestationDescIdentifier is the schema descriptor for identifier field.
	policestationDescIdentifier := policestationFields[3].Descriptor()
	// policestation.IdentifierValidator is a validator for the "identifier" field. It is called by the builders before save.
	policestation.IdentifierValidator = policestationDescIdentifier.Validators[0].(func(string) error)
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescName is the schema descriptor for name field.
	roleDescName := roleFields[0].Descriptor()
	// role.NameValidator is a validator for the "name" field. It is called by the builders before save.
	role.NameValidator = roleDescName.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
}
