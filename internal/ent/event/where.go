// Code generated by ent, DO NOT EDIT.

package event

import (
	"go-ent-project/internal/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldUpdatedAt, v))
}

// PlateChannel applies equality check predicate on the "plate_channel" field. It's identical to PlateChannelEQ.
func PlateChannel(v int) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateChannel, v))
}

// PlateIsExist applies equality check predicate on the "plate_is_exist" field. It's identical to PlateIsExistEQ.
func PlateIsExist(v bool) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateIsExist, v))
}

// PlateColor applies equality check predicate on the "plate_color" field. It's identical to PlateColorEQ.
func PlateColor(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateColor, v))
}

// PlateNumber applies equality check predicate on the "plate_number" field. It's identical to PlateNumberEQ.
func PlateNumber(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateNumber, v))
}

// PlateType applies equality check predicate on the "plate_type" field. It's identical to PlateTypeEQ.
func PlateType(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateType, v))
}

// PlateRegion applies equality check predicate on the "plate_region" field. It's identical to PlateRegionEQ.
func PlateRegion(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateRegion, v))
}

// PlateUploadNum applies equality check predicate on the "plate_upload_num" field. It's identical to PlateUploadNumEQ.
func PlateUploadNum(v int) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateUploadNum, v))
}

// SnapAllowUser applies equality check predicate on the "snap_allow_user" field. It's identical to SnapAllowUserEQ.
func SnapAllowUser(v bool) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapAllowUser, v))
}

// SnapAllowUserEndTime applies equality check predicate on the "snap_allow_user_end_time" field. It's identical to SnapAllowUserEndTimeEQ.
func SnapAllowUserEndTime(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapAllowUserEndTime, v))
}

// SnapDefenceCode applies equality check predicate on the "snap_defence_code" field. It's identical to SnapDefenceCodeEQ.
func SnapDefenceCode(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapDefenceCode, v))
}

// SnapDeviceID applies equality check predicate on the "snap_device_id" field. It's identical to SnapDeviceIDEQ.
func SnapDeviceID(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapDeviceID, v))
}

// SnapInCarPeopleNum applies equality check predicate on the "snap_in_car_people_num" field. It's identical to SnapInCarPeopleNumEQ.
func SnapInCarPeopleNum(v int) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapInCarPeopleNum, v))
}

// SnapLanNo applies equality check predicate on the "snap_lan_no" field. It's identical to SnapLanNoEQ.
func SnapLanNo(v int) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapLanNo, v))
}

// SnapOpenStrobe applies equality check predicate on the "snap_open_strobe" field. It's identical to SnapOpenStrobeEQ.
func SnapOpenStrobe(v bool) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapOpenStrobe, v))
}

// VehicleSeries applies equality check predicate on the "vehicle_series" field. It's identical to VehicleSeriesEQ.
func VehicleSeries(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldVehicleSeries, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldUpdatedAt, v))
}

// PlateBoundingBoxIsNil applies the IsNil predicate on the "plate_bounding_box" field.
func PlateBoundingBoxIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldPlateBoundingBox))
}

// PlateBoundingBoxNotNil applies the NotNil predicate on the "plate_bounding_box" field.
func PlateBoundingBoxNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldPlateBoundingBox))
}

// PlateChannelEQ applies the EQ predicate on the "plate_channel" field.
func PlateChannelEQ(v int) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateChannel, v))
}

// PlateChannelNEQ applies the NEQ predicate on the "plate_channel" field.
func PlateChannelNEQ(v int) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldPlateChannel, v))
}

// PlateChannelIn applies the In predicate on the "plate_channel" field.
func PlateChannelIn(vs ...int) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldPlateChannel, vs...))
}

// PlateChannelNotIn applies the NotIn predicate on the "plate_channel" field.
func PlateChannelNotIn(vs ...int) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldPlateChannel, vs...))
}

// PlateChannelGT applies the GT predicate on the "plate_channel" field.
func PlateChannelGT(v int) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldPlateChannel, v))
}

// PlateChannelGTE applies the GTE predicate on the "plate_channel" field.
func PlateChannelGTE(v int) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldPlateChannel, v))
}

// PlateChannelLT applies the LT predicate on the "plate_channel" field.
func PlateChannelLT(v int) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldPlateChannel, v))
}

// PlateChannelLTE applies the LTE predicate on the "plate_channel" field.
func PlateChannelLTE(v int) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldPlateChannel, v))
}

// PlateChannelIsNil applies the IsNil predicate on the "plate_channel" field.
func PlateChannelIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldPlateChannel))
}

// PlateChannelNotNil applies the NotNil predicate on the "plate_channel" field.
func PlateChannelNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldPlateChannel))
}

// PlateIsExistEQ applies the EQ predicate on the "plate_is_exist" field.
func PlateIsExistEQ(v bool) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateIsExist, v))
}

// PlateIsExistNEQ applies the NEQ predicate on the "plate_is_exist" field.
func PlateIsExistNEQ(v bool) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldPlateIsExist, v))
}

// PlateIsExistIsNil applies the IsNil predicate on the "plate_is_exist" field.
func PlateIsExistIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldPlateIsExist))
}

// PlateIsExistNotNil applies the NotNil predicate on the "plate_is_exist" field.
func PlateIsExistNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldPlateIsExist))
}

// PlateColorEQ applies the EQ predicate on the "plate_color" field.
func PlateColorEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateColor, v))
}

// PlateColorNEQ applies the NEQ predicate on the "plate_color" field.
func PlateColorNEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldPlateColor, v))
}

// PlateColorIn applies the In predicate on the "plate_color" field.
func PlateColorIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldPlateColor, vs...))
}

// PlateColorNotIn applies the NotIn predicate on the "plate_color" field.
func PlateColorNotIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldPlateColor, vs...))
}

// PlateColorGT applies the GT predicate on the "plate_color" field.
func PlateColorGT(v string) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldPlateColor, v))
}

// PlateColorGTE applies the GTE predicate on the "plate_color" field.
func PlateColorGTE(v string) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldPlateColor, v))
}

// PlateColorLT applies the LT predicate on the "plate_color" field.
func PlateColorLT(v string) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldPlateColor, v))
}

// PlateColorLTE applies the LTE predicate on the "plate_color" field.
func PlateColorLTE(v string) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldPlateColor, v))
}

// PlateColorContains applies the Contains predicate on the "plate_color" field.
func PlateColorContains(v string) predicate.Event {
	return predicate.Event(sql.FieldContains(FieldPlateColor, v))
}

// PlateColorHasPrefix applies the HasPrefix predicate on the "plate_color" field.
func PlateColorHasPrefix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasPrefix(FieldPlateColor, v))
}

// PlateColorHasSuffix applies the HasSuffix predicate on the "plate_color" field.
func PlateColorHasSuffix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasSuffix(FieldPlateColor, v))
}

// PlateColorIsNil applies the IsNil predicate on the "plate_color" field.
func PlateColorIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldPlateColor))
}

// PlateColorNotNil applies the NotNil predicate on the "plate_color" field.
func PlateColorNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldPlateColor))
}

// PlateColorEqualFold applies the EqualFold predicate on the "plate_color" field.
func PlateColorEqualFold(v string) predicate.Event {
	return predicate.Event(sql.FieldEqualFold(FieldPlateColor, v))
}

// PlateColorContainsFold applies the ContainsFold predicate on the "plate_color" field.
func PlateColorContainsFold(v string) predicate.Event {
	return predicate.Event(sql.FieldContainsFold(FieldPlateColor, v))
}

// PlateNumberEQ applies the EQ predicate on the "plate_number" field.
func PlateNumberEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateNumber, v))
}

// PlateNumberNEQ applies the NEQ predicate on the "plate_number" field.
func PlateNumberNEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldPlateNumber, v))
}

// PlateNumberIn applies the In predicate on the "plate_number" field.
func PlateNumberIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldPlateNumber, vs...))
}

// PlateNumberNotIn applies the NotIn predicate on the "plate_number" field.
func PlateNumberNotIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldPlateNumber, vs...))
}

// PlateNumberGT applies the GT predicate on the "plate_number" field.
func PlateNumberGT(v string) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldPlateNumber, v))
}

// PlateNumberGTE applies the GTE predicate on the "plate_number" field.
func PlateNumberGTE(v string) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldPlateNumber, v))
}

// PlateNumberLT applies the LT predicate on the "plate_number" field.
func PlateNumberLT(v string) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldPlateNumber, v))
}

// PlateNumberLTE applies the LTE predicate on the "plate_number" field.
func PlateNumberLTE(v string) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldPlateNumber, v))
}

// PlateNumberContains applies the Contains predicate on the "plate_number" field.
func PlateNumberContains(v string) predicate.Event {
	return predicate.Event(sql.FieldContains(FieldPlateNumber, v))
}

// PlateNumberHasPrefix applies the HasPrefix predicate on the "plate_number" field.
func PlateNumberHasPrefix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasPrefix(FieldPlateNumber, v))
}

// PlateNumberHasSuffix applies the HasSuffix predicate on the "plate_number" field.
func PlateNumberHasSuffix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasSuffix(FieldPlateNumber, v))
}

// PlateNumberIsNil applies the IsNil predicate on the "plate_number" field.
func PlateNumberIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldPlateNumber))
}

// PlateNumberNotNil applies the NotNil predicate on the "plate_number" field.
func PlateNumberNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldPlateNumber))
}

// PlateNumberEqualFold applies the EqualFold predicate on the "plate_number" field.
func PlateNumberEqualFold(v string) predicate.Event {
	return predicate.Event(sql.FieldEqualFold(FieldPlateNumber, v))
}

// PlateNumberContainsFold applies the ContainsFold predicate on the "plate_number" field.
func PlateNumberContainsFold(v string) predicate.Event {
	return predicate.Event(sql.FieldContainsFold(FieldPlateNumber, v))
}

// PlateTypeEQ applies the EQ predicate on the "plate_type" field.
func PlateTypeEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateType, v))
}

// PlateTypeNEQ applies the NEQ predicate on the "plate_type" field.
func PlateTypeNEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldPlateType, v))
}

// PlateTypeIn applies the In predicate on the "plate_type" field.
func PlateTypeIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldPlateType, vs...))
}

// PlateTypeNotIn applies the NotIn predicate on the "plate_type" field.
func PlateTypeNotIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldPlateType, vs...))
}

// PlateTypeGT applies the GT predicate on the "plate_type" field.
func PlateTypeGT(v string) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldPlateType, v))
}

// PlateTypeGTE applies the GTE predicate on the "plate_type" field.
func PlateTypeGTE(v string) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldPlateType, v))
}

// PlateTypeLT applies the LT predicate on the "plate_type" field.
func PlateTypeLT(v string) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldPlateType, v))
}

// PlateTypeLTE applies the LTE predicate on the "plate_type" field.
func PlateTypeLTE(v string) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldPlateType, v))
}

// PlateTypeContains applies the Contains predicate on the "plate_type" field.
func PlateTypeContains(v string) predicate.Event {
	return predicate.Event(sql.FieldContains(FieldPlateType, v))
}

// PlateTypeHasPrefix applies the HasPrefix predicate on the "plate_type" field.
func PlateTypeHasPrefix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasPrefix(FieldPlateType, v))
}

// PlateTypeHasSuffix applies the HasSuffix predicate on the "plate_type" field.
func PlateTypeHasSuffix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasSuffix(FieldPlateType, v))
}

// PlateTypeIsNil applies the IsNil predicate on the "plate_type" field.
func PlateTypeIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldPlateType))
}

// PlateTypeNotNil applies the NotNil predicate on the "plate_type" field.
func PlateTypeNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldPlateType))
}

// PlateTypeEqualFold applies the EqualFold predicate on the "plate_type" field.
func PlateTypeEqualFold(v string) predicate.Event {
	return predicate.Event(sql.FieldEqualFold(FieldPlateType, v))
}

// PlateTypeContainsFold applies the ContainsFold predicate on the "plate_type" field.
func PlateTypeContainsFold(v string) predicate.Event {
	return predicate.Event(sql.FieldContainsFold(FieldPlateType, v))
}

// PlateRegionEQ applies the EQ predicate on the "plate_region" field.
func PlateRegionEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateRegion, v))
}

// PlateRegionNEQ applies the NEQ predicate on the "plate_region" field.
func PlateRegionNEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldPlateRegion, v))
}

// PlateRegionIn applies the In predicate on the "plate_region" field.
func PlateRegionIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldPlateRegion, vs...))
}

// PlateRegionNotIn applies the NotIn predicate on the "plate_region" field.
func PlateRegionNotIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldPlateRegion, vs...))
}

// PlateRegionGT applies the GT predicate on the "plate_region" field.
func PlateRegionGT(v string) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldPlateRegion, v))
}

// PlateRegionGTE applies the GTE predicate on the "plate_region" field.
func PlateRegionGTE(v string) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldPlateRegion, v))
}

// PlateRegionLT applies the LT predicate on the "plate_region" field.
func PlateRegionLT(v string) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldPlateRegion, v))
}

// PlateRegionLTE applies the LTE predicate on the "plate_region" field.
func PlateRegionLTE(v string) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldPlateRegion, v))
}

// PlateRegionContains applies the Contains predicate on the "plate_region" field.
func PlateRegionContains(v string) predicate.Event {
	return predicate.Event(sql.FieldContains(FieldPlateRegion, v))
}

// PlateRegionHasPrefix applies the HasPrefix predicate on the "plate_region" field.
func PlateRegionHasPrefix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasPrefix(FieldPlateRegion, v))
}

// PlateRegionHasSuffix applies the HasSuffix predicate on the "plate_region" field.
func PlateRegionHasSuffix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasSuffix(FieldPlateRegion, v))
}

// PlateRegionIsNil applies the IsNil predicate on the "plate_region" field.
func PlateRegionIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldPlateRegion))
}

// PlateRegionNotNil applies the NotNil predicate on the "plate_region" field.
func PlateRegionNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldPlateRegion))
}

// PlateRegionEqualFold applies the EqualFold predicate on the "plate_region" field.
func PlateRegionEqualFold(v string) predicate.Event {
	return predicate.Event(sql.FieldEqualFold(FieldPlateRegion, v))
}

// PlateRegionContainsFold applies the ContainsFold predicate on the "plate_region" field.
func PlateRegionContainsFold(v string) predicate.Event {
	return predicate.Event(sql.FieldContainsFold(FieldPlateRegion, v))
}

// PlateUploadNumEQ applies the EQ predicate on the "plate_upload_num" field.
func PlateUploadNumEQ(v int) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldPlateUploadNum, v))
}

// PlateUploadNumNEQ applies the NEQ predicate on the "plate_upload_num" field.
func PlateUploadNumNEQ(v int) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldPlateUploadNum, v))
}

// PlateUploadNumIn applies the In predicate on the "plate_upload_num" field.
func PlateUploadNumIn(vs ...int) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldPlateUploadNum, vs...))
}

// PlateUploadNumNotIn applies the NotIn predicate on the "plate_upload_num" field.
func PlateUploadNumNotIn(vs ...int) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldPlateUploadNum, vs...))
}

// PlateUploadNumGT applies the GT predicate on the "plate_upload_num" field.
func PlateUploadNumGT(v int) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldPlateUploadNum, v))
}

// PlateUploadNumGTE applies the GTE predicate on the "plate_upload_num" field.
func PlateUploadNumGTE(v int) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldPlateUploadNum, v))
}

// PlateUploadNumLT applies the LT predicate on the "plate_upload_num" field.
func PlateUploadNumLT(v int) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldPlateUploadNum, v))
}

// PlateUploadNumLTE applies the LTE predicate on the "plate_upload_num" field.
func PlateUploadNumLTE(v int) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldPlateUploadNum, v))
}

// PlateUploadNumIsNil applies the IsNil predicate on the "plate_upload_num" field.
func PlateUploadNumIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldPlateUploadNum))
}

// PlateUploadNumNotNil applies the NotNil predicate on the "plate_upload_num" field.
func PlateUploadNumNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldPlateUploadNum))
}

// SnapAllowUserEQ applies the EQ predicate on the "snap_allow_user" field.
func SnapAllowUserEQ(v bool) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapAllowUser, v))
}

// SnapAllowUserNEQ applies the NEQ predicate on the "snap_allow_user" field.
func SnapAllowUserNEQ(v bool) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldSnapAllowUser, v))
}

// SnapAllowUserIsNil applies the IsNil predicate on the "snap_allow_user" field.
func SnapAllowUserIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldSnapAllowUser))
}

// SnapAllowUserNotNil applies the NotNil predicate on the "snap_allow_user" field.
func SnapAllowUserNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldSnapAllowUser))
}

// SnapAllowUserEndTimeEQ applies the EQ predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapAllowUserEndTime, v))
}

// SnapAllowUserEndTimeNEQ applies the NEQ predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeNEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldSnapAllowUserEndTime, v))
}

// SnapAllowUserEndTimeIn applies the In predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldSnapAllowUserEndTime, vs...))
}

// SnapAllowUserEndTimeNotIn applies the NotIn predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeNotIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldSnapAllowUserEndTime, vs...))
}

// SnapAllowUserEndTimeGT applies the GT predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeGT(v string) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldSnapAllowUserEndTime, v))
}

// SnapAllowUserEndTimeGTE applies the GTE predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeGTE(v string) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldSnapAllowUserEndTime, v))
}

// SnapAllowUserEndTimeLT applies the LT predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeLT(v string) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldSnapAllowUserEndTime, v))
}

// SnapAllowUserEndTimeLTE applies the LTE predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeLTE(v string) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldSnapAllowUserEndTime, v))
}

// SnapAllowUserEndTimeContains applies the Contains predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeContains(v string) predicate.Event {
	return predicate.Event(sql.FieldContains(FieldSnapAllowUserEndTime, v))
}

// SnapAllowUserEndTimeHasPrefix applies the HasPrefix predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeHasPrefix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasPrefix(FieldSnapAllowUserEndTime, v))
}

// SnapAllowUserEndTimeHasSuffix applies the HasSuffix predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeHasSuffix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasSuffix(FieldSnapAllowUserEndTime, v))
}

// SnapAllowUserEndTimeIsNil applies the IsNil predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldSnapAllowUserEndTime))
}

// SnapAllowUserEndTimeNotNil applies the NotNil predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldSnapAllowUserEndTime))
}

// SnapAllowUserEndTimeEqualFold applies the EqualFold predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeEqualFold(v string) predicate.Event {
	return predicate.Event(sql.FieldEqualFold(FieldSnapAllowUserEndTime, v))
}

// SnapAllowUserEndTimeContainsFold applies the ContainsFold predicate on the "snap_allow_user_end_time" field.
func SnapAllowUserEndTimeContainsFold(v string) predicate.Event {
	return predicate.Event(sql.FieldContainsFold(FieldSnapAllowUserEndTime, v))
}

// SnapDefenceCodeEQ applies the EQ predicate on the "snap_defence_code" field.
func SnapDefenceCodeEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapDefenceCode, v))
}

// SnapDefenceCodeNEQ applies the NEQ predicate on the "snap_defence_code" field.
func SnapDefenceCodeNEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldSnapDefenceCode, v))
}

// SnapDefenceCodeIn applies the In predicate on the "snap_defence_code" field.
func SnapDefenceCodeIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldSnapDefenceCode, vs...))
}

// SnapDefenceCodeNotIn applies the NotIn predicate on the "snap_defence_code" field.
func SnapDefenceCodeNotIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldSnapDefenceCode, vs...))
}

// SnapDefenceCodeGT applies the GT predicate on the "snap_defence_code" field.
func SnapDefenceCodeGT(v string) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldSnapDefenceCode, v))
}

// SnapDefenceCodeGTE applies the GTE predicate on the "snap_defence_code" field.
func SnapDefenceCodeGTE(v string) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldSnapDefenceCode, v))
}

// SnapDefenceCodeLT applies the LT predicate on the "snap_defence_code" field.
func SnapDefenceCodeLT(v string) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldSnapDefenceCode, v))
}

// SnapDefenceCodeLTE applies the LTE predicate on the "snap_defence_code" field.
func SnapDefenceCodeLTE(v string) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldSnapDefenceCode, v))
}

// SnapDefenceCodeContains applies the Contains predicate on the "snap_defence_code" field.
func SnapDefenceCodeContains(v string) predicate.Event {
	return predicate.Event(sql.FieldContains(FieldSnapDefenceCode, v))
}

// SnapDefenceCodeHasPrefix applies the HasPrefix predicate on the "snap_defence_code" field.
func SnapDefenceCodeHasPrefix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasPrefix(FieldSnapDefenceCode, v))
}

// SnapDefenceCodeHasSuffix applies the HasSuffix predicate on the "snap_defence_code" field.
func SnapDefenceCodeHasSuffix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasSuffix(FieldSnapDefenceCode, v))
}

// SnapDefenceCodeIsNil applies the IsNil predicate on the "snap_defence_code" field.
func SnapDefenceCodeIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldSnapDefenceCode))
}

// SnapDefenceCodeNotNil applies the NotNil predicate on the "snap_defence_code" field.
func SnapDefenceCodeNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldSnapDefenceCode))
}

// SnapDefenceCodeEqualFold applies the EqualFold predicate on the "snap_defence_code" field.
func SnapDefenceCodeEqualFold(v string) predicate.Event {
	return predicate.Event(sql.FieldEqualFold(FieldSnapDefenceCode, v))
}

// SnapDefenceCodeContainsFold applies the ContainsFold predicate on the "snap_defence_code" field.
func SnapDefenceCodeContainsFold(v string) predicate.Event {
	return predicate.Event(sql.FieldContainsFold(FieldSnapDefenceCode, v))
}

// SnapDeviceIDEQ applies the EQ predicate on the "snap_device_id" field.
func SnapDeviceIDEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapDeviceID, v))
}

// SnapDeviceIDNEQ applies the NEQ predicate on the "snap_device_id" field.
func SnapDeviceIDNEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldSnapDeviceID, v))
}

// SnapDeviceIDIn applies the In predicate on the "snap_device_id" field.
func SnapDeviceIDIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldSnapDeviceID, vs...))
}

// SnapDeviceIDNotIn applies the NotIn predicate on the "snap_device_id" field.
func SnapDeviceIDNotIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldSnapDeviceID, vs...))
}

// SnapDeviceIDGT applies the GT predicate on the "snap_device_id" field.
func SnapDeviceIDGT(v string) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldSnapDeviceID, v))
}

// SnapDeviceIDGTE applies the GTE predicate on the "snap_device_id" field.
func SnapDeviceIDGTE(v string) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldSnapDeviceID, v))
}

// SnapDeviceIDLT applies the LT predicate on the "snap_device_id" field.
func SnapDeviceIDLT(v string) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldSnapDeviceID, v))
}

// SnapDeviceIDLTE applies the LTE predicate on the "snap_device_id" field.
func SnapDeviceIDLTE(v string) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldSnapDeviceID, v))
}

// SnapDeviceIDContains applies the Contains predicate on the "snap_device_id" field.
func SnapDeviceIDContains(v string) predicate.Event {
	return predicate.Event(sql.FieldContains(FieldSnapDeviceID, v))
}

// SnapDeviceIDHasPrefix applies the HasPrefix predicate on the "snap_device_id" field.
func SnapDeviceIDHasPrefix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasPrefix(FieldSnapDeviceID, v))
}

// SnapDeviceIDHasSuffix applies the HasSuffix predicate on the "snap_device_id" field.
func SnapDeviceIDHasSuffix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasSuffix(FieldSnapDeviceID, v))
}

// SnapDeviceIDIsNil applies the IsNil predicate on the "snap_device_id" field.
func SnapDeviceIDIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldSnapDeviceID))
}

// SnapDeviceIDNotNil applies the NotNil predicate on the "snap_device_id" field.
func SnapDeviceIDNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldSnapDeviceID))
}

// SnapDeviceIDEqualFold applies the EqualFold predicate on the "snap_device_id" field.
func SnapDeviceIDEqualFold(v string) predicate.Event {
	return predicate.Event(sql.FieldEqualFold(FieldSnapDeviceID, v))
}

// SnapDeviceIDContainsFold applies the ContainsFold predicate on the "snap_device_id" field.
func SnapDeviceIDContainsFold(v string) predicate.Event {
	return predicate.Event(sql.FieldContainsFold(FieldSnapDeviceID, v))
}

// SnapInCarPeopleNumEQ applies the EQ predicate on the "snap_in_car_people_num" field.
func SnapInCarPeopleNumEQ(v int) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapInCarPeopleNum, v))
}

// SnapInCarPeopleNumNEQ applies the NEQ predicate on the "snap_in_car_people_num" field.
func SnapInCarPeopleNumNEQ(v int) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldSnapInCarPeopleNum, v))
}

// SnapInCarPeopleNumIn applies the In predicate on the "snap_in_car_people_num" field.
func SnapInCarPeopleNumIn(vs ...int) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldSnapInCarPeopleNum, vs...))
}

// SnapInCarPeopleNumNotIn applies the NotIn predicate on the "snap_in_car_people_num" field.
func SnapInCarPeopleNumNotIn(vs ...int) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldSnapInCarPeopleNum, vs...))
}

// SnapInCarPeopleNumGT applies the GT predicate on the "snap_in_car_people_num" field.
func SnapInCarPeopleNumGT(v int) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldSnapInCarPeopleNum, v))
}

// SnapInCarPeopleNumGTE applies the GTE predicate on the "snap_in_car_people_num" field.
func SnapInCarPeopleNumGTE(v int) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldSnapInCarPeopleNum, v))
}

// SnapInCarPeopleNumLT applies the LT predicate on the "snap_in_car_people_num" field.
func SnapInCarPeopleNumLT(v int) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldSnapInCarPeopleNum, v))
}

// SnapInCarPeopleNumLTE applies the LTE predicate on the "snap_in_car_people_num" field.
func SnapInCarPeopleNumLTE(v int) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldSnapInCarPeopleNum, v))
}

// SnapInCarPeopleNumIsNil applies the IsNil predicate on the "snap_in_car_people_num" field.
func SnapInCarPeopleNumIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldSnapInCarPeopleNum))
}

// SnapInCarPeopleNumNotNil applies the NotNil predicate on the "snap_in_car_people_num" field.
func SnapInCarPeopleNumNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldSnapInCarPeopleNum))
}

// SnapLanNoEQ applies the EQ predicate on the "snap_lan_no" field.
func SnapLanNoEQ(v int) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapLanNo, v))
}

// SnapLanNoNEQ applies the NEQ predicate on the "snap_lan_no" field.
func SnapLanNoNEQ(v int) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldSnapLanNo, v))
}

// SnapLanNoIn applies the In predicate on the "snap_lan_no" field.
func SnapLanNoIn(vs ...int) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldSnapLanNo, vs...))
}

// SnapLanNoNotIn applies the NotIn predicate on the "snap_lan_no" field.
func SnapLanNoNotIn(vs ...int) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldSnapLanNo, vs...))
}

// SnapLanNoGT applies the GT predicate on the "snap_lan_no" field.
func SnapLanNoGT(v int) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldSnapLanNo, v))
}

// SnapLanNoGTE applies the GTE predicate on the "snap_lan_no" field.
func SnapLanNoGTE(v int) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldSnapLanNo, v))
}

// SnapLanNoLT applies the LT predicate on the "snap_lan_no" field.
func SnapLanNoLT(v int) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldSnapLanNo, v))
}

// SnapLanNoLTE applies the LTE predicate on the "snap_lan_no" field.
func SnapLanNoLTE(v int) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldSnapLanNo, v))
}

// SnapLanNoIsNil applies the IsNil predicate on the "snap_lan_no" field.
func SnapLanNoIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldSnapLanNo))
}

// SnapLanNoNotNil applies the NotNil predicate on the "snap_lan_no" field.
func SnapLanNoNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldSnapLanNo))
}

// SnapOpenStrobeEQ applies the EQ predicate on the "snap_open_strobe" field.
func SnapOpenStrobeEQ(v bool) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldSnapOpenStrobe, v))
}

// SnapOpenStrobeNEQ applies the NEQ predicate on the "snap_open_strobe" field.
func SnapOpenStrobeNEQ(v bool) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldSnapOpenStrobe, v))
}

// SnapOpenStrobeIsNil applies the IsNil predicate on the "snap_open_strobe" field.
func SnapOpenStrobeIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldSnapOpenStrobe))
}

// SnapOpenStrobeNotNil applies the NotNil predicate on the "snap_open_strobe" field.
func SnapOpenStrobeNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldSnapOpenStrobe))
}

// VehicleBoundingBoxIsNil applies the IsNil predicate on the "vehicle_bounding_box" field.
func VehicleBoundingBoxIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldVehicleBoundingBox))
}

// VehicleBoundingBoxNotNil applies the NotNil predicate on the "vehicle_bounding_box" field.
func VehicleBoundingBoxNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldVehicleBoundingBox))
}

// VehicleSeriesEQ applies the EQ predicate on the "vehicle_series" field.
func VehicleSeriesEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldEQ(FieldVehicleSeries, v))
}

// VehicleSeriesNEQ applies the NEQ predicate on the "vehicle_series" field.
func VehicleSeriesNEQ(v string) predicate.Event {
	return predicate.Event(sql.FieldNEQ(FieldVehicleSeries, v))
}

// VehicleSeriesIn applies the In predicate on the "vehicle_series" field.
func VehicleSeriesIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldIn(FieldVehicleSeries, vs...))
}

// VehicleSeriesNotIn applies the NotIn predicate on the "vehicle_series" field.
func VehicleSeriesNotIn(vs ...string) predicate.Event {
	return predicate.Event(sql.FieldNotIn(FieldVehicleSeries, vs...))
}

// VehicleSeriesGT applies the GT predicate on the "vehicle_series" field.
func VehicleSeriesGT(v string) predicate.Event {
	return predicate.Event(sql.FieldGT(FieldVehicleSeries, v))
}

// VehicleSeriesGTE applies the GTE predicate on the "vehicle_series" field.
func VehicleSeriesGTE(v string) predicate.Event {
	return predicate.Event(sql.FieldGTE(FieldVehicleSeries, v))
}

// VehicleSeriesLT applies the LT predicate on the "vehicle_series" field.
func VehicleSeriesLT(v string) predicate.Event {
	return predicate.Event(sql.FieldLT(FieldVehicleSeries, v))
}

// VehicleSeriesLTE applies the LTE predicate on the "vehicle_series" field.
func VehicleSeriesLTE(v string) predicate.Event {
	return predicate.Event(sql.FieldLTE(FieldVehicleSeries, v))
}

// VehicleSeriesContains applies the Contains predicate on the "vehicle_series" field.
func VehicleSeriesContains(v string) predicate.Event {
	return predicate.Event(sql.FieldContains(FieldVehicleSeries, v))
}

// VehicleSeriesHasPrefix applies the HasPrefix predicate on the "vehicle_series" field.
func VehicleSeriesHasPrefix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasPrefix(FieldVehicleSeries, v))
}

// VehicleSeriesHasSuffix applies the HasSuffix predicate on the "vehicle_series" field.
func VehicleSeriesHasSuffix(v string) predicate.Event {
	return predicate.Event(sql.FieldHasSuffix(FieldVehicleSeries, v))
}

// VehicleSeriesIsNil applies the IsNil predicate on the "vehicle_series" field.
func VehicleSeriesIsNil() predicate.Event {
	return predicate.Event(sql.FieldIsNull(FieldVehicleSeries))
}

// VehicleSeriesNotNil applies the NotNil predicate on the "vehicle_series" field.
func VehicleSeriesNotNil() predicate.Event {
	return predicate.Event(sql.FieldNotNull(FieldVehicleSeries))
}

// VehicleSeriesEqualFold applies the EqualFold predicate on the "vehicle_series" field.
func VehicleSeriesEqualFold(v string) predicate.Event {
	return predicate.Event(sql.FieldEqualFold(FieldVehicleSeries, v))
}

// VehicleSeriesContainsFold applies the ContainsFold predicate on the "vehicle_series" field.
func VehicleSeriesContainsFold(v string) predicate.Event {
	return predicate.Event(sql.FieldContainsFold(FieldVehicleSeries, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Event) predicate.Event {
	return predicate.Event(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Event) predicate.Event {
	return predicate.Event(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Event) predicate.Event {
	return predicate.Event(sql.NotPredicates(p))
}
